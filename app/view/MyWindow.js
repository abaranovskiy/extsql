/*
 * File: app/view/MyWindow.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.MyWindow', {
    extend: 'Ext.window.Window',

    height: 217,
    id: 'newConnection',
    itemId: 'newConnection',
    width: 400,
    layout: {
        type: 'border'
    },
    title: 'Новое подключение',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    region: 'center',
                    id: 'newConnectionForm',
                    itemId: 'newConnectionForm',
                    layout: {
                        type: 'absolute'
                    },
                    bodyPadding: 10,
                    frameHeader: false,
                    header: false,
                    title: 'My Form',
                    items: [
                        {
                            xtype: 'fieldset',
                            title: 'Параметры подключения',
                            items: [
                                {
                                    xtype: 'textfield',
                                    anchor: '100%',
                                    fieldLabel: 'Хост',
                                    name: 'host',
                                    value: 'localhost',
                                    minLength: 1,
                                    validateBlank: true
                                },
                                {
                                    xtype: 'textfield',
                                    anchor: '100%',
                                    fieldLabel: 'Порт',
                                    name: 'port',
                                    minLength: 1
                                },
                                {
                                    xtype: 'textfield',
                                    anchor: '100%',
                                    fieldLabel: 'Пользователь',
                                    name: 'user'
                                },
                                {
                                    xtype: 'textfield',
                                    anchor: '100%',
                                    fieldLabel: 'Пароль',
                                    name: 'password',
                                    inputType: 'password'
                                }
                            ]
                        },
                        {
                            xtype: 'button',
                            handler: function(button, event) {
                                me.destroy();
                            },
                            x: 320,
                            y: 150,
                            text: 'Отмена'
                        },
                        {
                            xtype: 'button',
                            handler: function(button, event) {
                                var form = Ext.getCmp('newConnectionForm').getForm();
                                if (form.isValid()) {
                                    form.submit({
                                        waitMsg: 'Идет создание соединения.',
                                        url: '/backend/db/connection/create',
                                        success: function(form,response) {
                                            console.log(response.result);
                                            me.destroy();
                                        },
                                        failure : function(form, response, t){
                                            console.log(response);
                                            Ext.Msg.alert('Внимание','Соединение не создано!'); 
                                        }
                                    });
                                }
                            },
                            x: 240,
                            y: 150,
                            text: 'Создать'
                        },
                        {
                            xtype: 'button',
                            handler: function(button, event) {
                                var form = Ext.getCmp('newConnectionForm').getForm();
                                if (form.isValid()) {
                                    form.submit({
                                        waitMsg: 'Идет проверка соединения.',
                                        url: '/backend/db/connection/test',
                                        success: function(form,response) {
                                            console.log(response);
                                            Ext.Msg.alert('Внимание','Соединение успешно установлено');

                                        },
                                        failure : function(form, response, t){
                                            console.log(response);
                                            var msg = 'Соединение не создано!';
                                            if (response.result.description) {
                                                msg += '<br>' + response.result.description;
                                            }
                                            Ext.Msg.alert('Внимание',msg); 
                                        }
                                    });
                                }
                            },
                            x: 10,
                            y: 150,
                            text: 'Тест'
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    }

});